<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>记录第一次搭建博客的艰苦历程</title>
    <url>/2023/07/19/hello-world/</url>
    <content><![CDATA[<h4 id="我为什么要搭建一篇博客？"><a href="#我为什么要搭建一篇博客？" class="headerlink" title="我为什么要搭建一篇博客？"></a>我为什么要搭建一篇博客？</h4><blockquote>
<p>之前在学习的过程中，遇到过的很多问题，基本上都是通过百度解决的，然后也见了很多人搭建了自己博客，并且每个人的博客对于他们来说的作用都不一样，我决定搭建一个博客也是觉得我的学习历程可以被记录下来，也可以分享一些出去游玩的东西。</p>
<p>也有出于挑战一下的心态，我选了 hexo 加 github 搭建博客，hexo 还没接触过，但是知道这样搭建的博客还是基于 node.js 的，同时也希望在搭建的过程中学习到一些新的东西。</p>
<p>反正挺酷的！</p>
</blockquote>
<p>编写博客使用的几乎全是Markdown语法，先给不知道怎么写的小伙伴上个链接~<a href="http://markdown.p2hp.com/basic-syntax/">Markdown官网</a></p>
<p>我也在CSDN找了一篇，也可以看看<a href="https://blog.csdn.net/u014061630/article/details/81359144?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522168967454716800197084944%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=168967454716800197084944&biz_id=0&utm_medium=distribute.pc_chrome_plugin_search_result.none-task-blog-2~all~top_positive~default-1-81359144-null-null.nonecase&utm_term=markdown%E8%AF%AD%E6%B3%95&spm=1018.2226.3001.4187">语法图文全面详解</a></p>
<span id="more"></span>

<h2 id="安装hexo包"><a href="#安装hexo包" class="headerlink" title="安装hexo包"></a>安装hexo包</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo</span><br></pre></td></tr></table></figure>

<h2 id="创建一个hexo博客"><a href="#创建一个hexo博客" class="headerlink" title="创建一个hexo博客"></a>创建一个hexo博客</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init 博客名称</span><br></pre></td></tr></table></figure>

<h3 id="创建一个文件进行编写博客"><a href="#创建一个文件进行编写博客" class="headerlink" title="创建一个文件进行编写博客"></a>创建一个文件进行编写博客</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new <span class="string">&quot;My blog&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="本地启动博客-—-Run-server"><a href="#本地启动博客-—-Run-server" class="headerlink" title="本地启动博客 — Run server"></a>本地启动博客 — Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo server (hexo s)</span><br></pre></td></tr></table></figure>

<h3 id="打包为静态文件"><a href="#打包为静态文件" class="headerlink" title="打包为静态文件"></a>打包为静态文件</h3><p>hexo g 命令执行后会生成一个public文件下，这个文件夹便是打包后生成的静态文件夹。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo generate (hexo g)</span><br></pre></td></tr></table></figure>

<h3 id="推送至github"><a href="#推送至github" class="headerlink" title="推送至github"></a>推送至github</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure>
<p>这里也可以使用git命令行来推送至远程仓库（敲命令行主要是帅！！！帅就完了啊哈哈哈哈哈哈哈哈）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&#x27;提交备注&#x27;</span></span><br><span class="line">git pull</span><br><span class="line">git push</span><br></pre></td></tr></table></figure>


<h3 id="清空博客缓存"><a href="#清空博客缓存" class="headerlink" title="清空博客缓存"></a>清空博客缓存</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure>

<h3 id="清除本地项目并重新生成-（重新部署时使用）"><a href="#清除本地项目并重新生成-（重新部署时使用）" class="headerlink" title="清除本地项目并重新生成 （重新部署时使用）"></a>清除本地项目并重新生成 （重新部署时使用）</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>blog</tag>
      </tags>
  </entry>
  <entry>
    <title>非常实用的JavaScript优雅代码</title>
    <url>/2023/07/21/javaScript%E6%9E%81%E9%99%90%E7%9C%81%E5%AD%97%E8%8A%82/</url>
    <content><![CDATA[<p>用简单的逻辑和尽可能少的代码行来解决一个复杂的问题。随着 ES6 箭头函数的引入，可以创建看起来优雅而简单的单行代码。</p>
<span id="more"></span>

<h1 id="日期处理"><a href="#日期处理" class="headerlink" title="日期处理"></a>日期处理</h1><blockquote>
<h4 id="检查日期是否有效"><a href="#检查日期是否有效" class="headerlink" title="检查日期是否有效"></a>检查日期是否有效</h4></blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">isDateValid</span> = (<span class="params">...val</span>) =&gt; !<span class="title class_">Number</span>.<span class="built_in">isNaN</span>(<span class="keyword">new</span> <span class="title class_">Date</span>(...val).<span class="title function_">valueOf</span>());</span><br><span class="line"></span><br><span class="line"><span class="title function_">isDateValid</span>(<span class="string">&quot;December 17, 1995 03:24:00&quot;</span>);  <span class="comment">// true</span></span><br></pre></td></tr></table></figure>

<blockquote>
<h4 id="计算两个日期之间的间隔"><a href="#计算两个日期之间的间隔" class="headerlink" title="计算两个日期之间的间隔"></a>计算两个日期之间的间隔</h4></blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">dayDif</span> = (<span class="params">date1, date2</span>) =&gt; <span class="title class_">Math</span>.<span class="title function_">ceil</span>(<span class="title class_">Math</span>.<span class="title function_">abs</span>(date1.<span class="title function_">getTime</span>() - date2.<span class="title function_">getTime</span>()) / <span class="number">86400000</span>)</span><br><span class="line">    </span><br><span class="line"><span class="title function_">dayDif</span>(<span class="keyword">new</span> <span class="title class_">Date</span>(<span class="string">&quot;2021-11-3&quot;</span>), <span class="keyword">new</span> <span class="title class_">Date</span>(<span class="string">&quot;2022-2-1&quot;</span>))  <span class="comment">// 90</span></span><br></pre></td></tr></table></figure>

<blockquote>
<h4 id="查找日期位于一年中的第几天"><a href="#查找日期位于一年中的第几天" class="headerlink" title="查找日期位于一年中的第几天"></a>查找日期位于一年中的第几天</h4></blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">dayOfYear</span> = (<span class="params">date</span>) =&gt; <span class="title class_">Math</span>.<span class="title function_">floor</span>((date - <span class="keyword">new</span> <span class="title class_">Date</span>(date.<span class="title function_">getFullYear</span>(), <span class="number">0</span>, <span class="number">0</span>)) / <span class="number">1000</span> / <span class="number">60</span> / <span class="number">60</span> / <span class="number">24</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_">dayOfYear</span>(<span class="keyword">new</span> <span class="title class_">Date</span>());   <span class="comment">// 307</span></span><br></pre></td></tr></table></figure>

<blockquote>
<h4 id="时间格式化"><a href="#时间格式化" class="headerlink" title="时间格式化"></a>时间格式化</h4></blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">timeFromDate</span> = date =&gt; date.<span class="title function_">toTimeString</span>().<span class="title function_">slice</span>(<span class="number">0</span>, <span class="number">8</span>);</span><br><span class="line">    </span><br><span class="line"><span class="title function_">timeFromDate</span>(<span class="keyword">new</span> <span class="title class_">Date</span>(<span class="number">2021</span>, <span class="number">11</span>, <span class="number">2</span>, <span class="number">12</span>, <span class="number">30</span>, <span class="number">0</span>));  <span class="comment">// 12:30:00</span></span><br><span class="line"><span class="title function_">timeFromDate</span>(<span class="keyword">new</span> <span class="title class_">Date</span>());  <span class="comment">// 返回当前时间 09:00:00</span></span><br></pre></td></tr></table></figure>

<h1 id="字符串处理"><a href="#字符串处理" class="headerlink" title="字符串处理"></a>字符串处理</h1><blockquote>
<h4 id="字符串首字母大写"><a href="#字符串首字母大写" class="headerlink" title="字符串首字母大写"></a>字符串首字母大写</h4></blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">capitalize</span> = str =&gt; str.<span class="title function_">charAt</span>(<span class="number">0</span>).<span class="title function_">toUpperCase</span>() + str.<span class="title function_">slice</span>(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="title function_">capitalize</span>(<span class="string">&quot;hello world&quot;</span>)  <span class="comment">// Hello world</span></span><br></pre></td></tr></table></figure>

<blockquote>
<h4 id="翻转字符串"><a href="#翻转字符串" class="headerlink" title="翻转字符串"></a>翻转字符串</h4></blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">reverse</span> = str =&gt; str.<span class="title function_">split</span>(<span class="string">&#x27;&#x27;</span>).<span class="title function_">reverse</span>().<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_">reverse</span>(<span class="string">&#x27;hello world&#x27;</span>);   <span class="comment">// &#x27;dlrow olleh&#x27;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<h4 id="随机字符串"><a href="#随机字符串" class="headerlink" title="随机字符串"></a>随机字符串</h4></blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">randomString</span> = (<span class="params"></span>) =&gt; <span class="title class_">Math</span>.<span class="title function_">random</span>().<span class="title function_">toString</span>(<span class="number">36</span>).<span class="title function_">slice</span>(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_">randomString</span>();</span><br></pre></td></tr></table></figure>

<h1 id="数组处理"><a href="#数组处理" class="headerlink" title="数组处理"></a>数组处理</h1><blockquote>
<h4 id="数组去重"><a href="#数组去重" class="headerlink" title="数组去重"></a>数组去重</h4></blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">removeDuplicates</span> = (<span class="params">arr</span>) =&gt; [...<span class="keyword">new</span> <span class="title class_">Set</span>(arr)];</span><br><span class="line"></span><br><span class="line"><span class="title function_">removeDuplicates</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">6</span>]); <span class="comment">// [1, 2, 3, 4, 5, 6]</span></span><br></pre></td></tr></table></figure>

<blockquote>
<h4 id="判断数组是否为空"><a href="#判断数组是否为空" class="headerlink" title="判断数组是否为空"></a>判断数组是否为空</h4></blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">isNotEmpty</span> = arr =&gt; <span class="title class_">Array</span>.<span class="title function_">isArray</span>(arr) &amp;&amp; arr.<span class="property">length</span> &gt; <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_">isNotEmpty</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]);  <span class="comment">// true</span></span><br></pre></td></tr></table></figure>

<blockquote>
<h4 id="合并两个数组"><a href="#合并两个数组" class="headerlink" title="合并两个数组"></a>合并两个数组</h4></blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">merge</span> = (<span class="params">a, b</span>) =&gt; a.<span class="title function_">concat</span>(b);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">merge</span> = (<span class="params">a, b</span>) =&gt; [...a, ...b];</span><br></pre></td></tr></table></figure>

<blockquote>
<h4 id="取数组中的最小-大值"><a href="#取数组中的最小-大值" class="headerlink" title="取数组中的最小&#x2F;大值"></a>取数组中的最小&#x2F;大值</h4></blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">22</span>, <span class="number">13</span>, <span class="number">6</span>, <span class="number">55</span>, <span class="number">30</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> max = <span class="title class_">Math</span>.<span class="property">max</span>.<span class="title function_">apply</span>(<span class="literal">null</span>, arr)</span><br><span class="line"><span class="keyword">let</span> min = <span class="title class_">Math</span>.<span class="property">min</span>.<span class="title function_">apply</span>(<span class="literal">null</span>, arr)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(max, min) <span class="comment">// 55, 6</span></span><br></pre></td></tr></table></figure>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> array=[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;index_id&quot;</span>: <span class="number">119</span>,</span><br><span class="line">    <span class="string">&quot;area_id&quot;</span>: <span class="string">&quot;18335623&quot;</span>,</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;满意度&quot;</span>,</span><br><span class="line">    <span class="string">&quot;value&quot;</span>: <span class="string">&quot;100&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;index_id&quot;</span>: <span class="number">119</span>,</span><br><span class="line">    <span class="string">&quot;area_id&quot;</span>: <span class="string">&quot;18335624&quot;</span>,</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;满意度&quot;</span>,</span><br><span class="line">    <span class="string">&quot;value&quot;</span>: <span class="string">&quot;20&quot;</span></span><br><span class="line">  &#125;];</span><br><span class="line"><span class="keyword">let</span> max = <span class="title class_">Math</span>.<span class="property">max</span>.<span class="title function_">apply</span>(<span class="title class_">Math</span>, array.<span class="title function_">map</span>(<span class="keyword">function</span>(<span class="params">res</span>) &#123;<span class="keyword">return</span> res.<span class="property">value</span>&#125;)) <span class="comment">// 100</span></span><br><span class="line"><span class="keyword">let</span> min = <span class="title class_">Math</span>.<span class="property">min</span>.<span class="title function_">apply</span>(<span class="title class_">Math</span>, array.<span class="title function_">map</span>(<span class="keyword">function</span>(<span class="params">res</span>) &#123;<span class="keyword">return</span> res.<span class="property">value</span>&#125;)) <span class="comment">// 20</span></span><br></pre></td></tr></table></figure>

<h1 id="优化代码"><a href="#优化代码" class="headerlink" title="优化代码"></a>优化代码</h1><blockquote>
<h4 id="可选链操作符"><a href="#可选链操作符" class="headerlink" title="可选链操作符 ?."></a>可选链操作符 ?.</h4></blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (res &amp;&amp; res.<span class="property">data</span> &amp;&amp; res.<span class="property">data</span>.<span class="property">success</span>) &#123;   </span><br><span class="line">   <span class="comment">//code</span></span><br><span class="line">&#125; </span><br><span class="line">优化后</span><br><span class="line"><span class="keyword">if</span> (res?.<span class="property">data</span>?.<span class="property">success</span>) &#123;</span><br><span class="line">  <span class="comment">// code</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<h4 id="三目运算符"><a href="#三目运算符" class="headerlink" title="三目运算符"></a>三目运算符</h4></blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> age = <span class="string">&quot;18&quot;</span></span><br><span class="line"><span class="keyword">const</span> str = (age &lt; <span class="string">&#x27;18&#x27;</span> )? <span class="string">&#x27;未成年&#x27;</span> : <span class="string">&#x27;已成年&#x27;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<h4 id="带有多个条件的-if-语句"><a href="#带有多个条件的-if-语句" class="headerlink" title="带有多个条件的 if 语句"></a>带有多个条件的 if 语句</h4></blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (x === <span class="string">&#x27;abc&#x27;</span> || x === <span class="string">&#x27;def&#x27;</span> || x === <span class="string">&#x27;ghi&#x27;</span> || x ===<span class="string">&#x27;jkl&#x27;</span>) &#123;</span><br><span class="line">    <span class="comment">//code</span></span><br><span class="line">&#125;</span><br><span class="line">优化后</span><br><span class="line"><span class="keyword">if</span> ([<span class="string">&#x27;abc&#x27;</span>, <span class="string">&#x27;def&#x27;</span>, <span class="string">&#x27;ghi&#x27;</span>, <span class="string">&#x27;jkl&#x27;</span>].<span class="title function_">includes</span>(x)) &#123;</span><br><span class="line">   <span class="comment">//code</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<h4 id="null、undefined-和空值检查"><a href="#null、undefined-和空值检查" class="headerlink" title="null、undefined 和空值检查"></a>null、undefined 和空值检查</h4></blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (test1 !== <span class="literal">null</span> || test1 !== <span class="literal">undefined</span> || test1 !== <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> test2 = test1;</span><br><span class="line">&#125;</span><br><span class="line">优化后</span><br><span class="line"><span class="keyword">let</span> test2 = test1 || <span class="string">&#x27;&#x27;</span>;</span><br></pre></td></tr></table></figure>

<blockquote>
<h4 id="用于多个条件判断的-操作符"><a href="#用于多个条件判断的-操作符" class="headerlink" title="用于多个条件判断的 &amp;&amp; 操作符"></a>用于多个条件判断的 &amp;&amp; 操作符</h4></blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (test1) &#123;</span><br><span class="line"> <span class="title function_">callMethod</span>(); </span><br><span class="line">&#125; </span><br><span class="line">优化后 </span><br><span class="line">test1 &amp;&amp; <span class="title function_">callMethod</span>();</span><br></pre></td></tr></table></figure>

<blockquote>
<h4 id="模板字符串"><a href="#模板字符串" class="headerlink" title="模板字符串"></a>模板字符串</h4></blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> welcome = <span class="string">&#x27;Hi &#x27;</span> + test1 + <span class="string">&#x27; &#x27;</span> + test2 + <span class="string">&#x27;.&#x27;</span></span><br><span class="line">优化后</span><br><span class="line"><span class="keyword">const</span> welcome = <span class="string">`Hi <span class="subst">$&#123;test1&#125;</span> <span class="subst">$&#123;test2&#125;</span>`</span>;</span><br></pre></td></tr></table></figure>

<blockquote>
<h4 id="解构赋值"><a href="#解构赋值" class="headerlink" title="解构赋值"></a>解构赋值</h4></blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> test1 = <span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">test1</span>;</span><br><span class="line"><span class="keyword">const</span> test2 = <span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">test2</span>;</span><br><span class="line"><span class="keyword">const</span> test2 = <span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">test3</span>;</span><br><span class="line">优化后</span><br><span class="line"><span class="keyword">const</span> &#123; test1, test2, test3 &#125; = <span class="variable language_">this</span>.<span class="property">data</span>;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>javaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>烟花</title>
    <url>/2023/02/05/%E7%83%9F%E8%8A%B1/</url>
    <content><![CDATA[<video controls>
  <source src="/videos/yanhua.mp4" type="video/mp4">
</video>
]]></content>
      <categories>
        <category>烟花</category>
      </categories>
  </entry>
  <entry>
    <title>这个王多鱼哈哈哈哈哈哈</title>
    <url>/2022/08/21/%E7%8E%8B%E5%A4%9A%E9%B1%BC/</url>
    <content><![CDATA[<p><img src="/images/wdy.png" alt="特别丑的log"></p>
<p>我敢说这个<a href="https://duoyu.wang/">王多鱼</a>一定是全世界最没用的网站，如你不嫌弃可以提交自己的项目链接过去，然后等他成为百年老站以后，相信一定会有亿万富翁来投资。</p>
<span id="more"></span>

<p>这个网站设计太随意了，白菜价聘请的设计师可能有点色盲，直接上了个红配绿。 LOGO 设计也是很扯，人家王多鱼先生是西虹市首富，是亿万富翁，这设计完全一点身价十亿气质都没有。</p>
<p><img src="/images/wdy1.png" alt="特别丑的log"></p>
<p>链接在这：<a href="https://duoyu.wang/">duoyu.wang</a></p>
<blockquote>
<p>色即是空、少即是多，Less is more，所以：绿即是红，Green is red ～<br>——设计师，如是说</p>
<p>设计的好与不好自有公众评说，反正是真能叨叨！</p>
</blockquote>
]]></content>
      <categories>
        <category>王多鱼</category>
      </categories>
  </entry>
  <entry>
    <title>VUE写一个简单的Todolist</title>
    <url>/2022/06/19/VUE%E5%86%99%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84Todolist/</url>
    <content><![CDATA[<h3 id="Vue之写一个简单的Todolist"><a href="#Vue之写一个简单的Todolist" class="headerlink" title="Vue之写一个简单的Todolist"></a>Vue之写一个简单的Todolist</h3><p>待办事项。效果参考网址 <a href="https://codepen.io/btc022003/pen/OdagLN">vue-todolist</a><br>示例效果中用的是 localStorage 本地存储，所以直接定义了空数组，利用数组的方式。</p>
]]></content>
      <tags>
        <tag>VUE</tag>
      </tags>
  </entry>
  <entry>
    <title>关于VUE</title>
    <url>/2022/04/12/%E5%85%B3%E4%BA%8EVUE/</url>
    <content><![CDATA[<h4 id="Vue-是什么？"><a href="#Vue-是什么？" class="headerlink" title="Vue 是什么？"></a>Vue 是什么？</h4><div align="center">
    <img src="/images/vue-logo.svg" alt="VUE" width="300" height="300">
</div>

<p>先放一下 Vue 的官网，多读一读<a href="https://v2.cn.vuejs.org/">Vue 官方文档</a>总是有好处的 ~</p>
<h3 id="简单点来说-Vue-是一套用于构建用户界面的前端渐进式的-MVVM-开发框架。"><a href="#简单点来说-Vue-是一套用于构建用户界面的前端渐进式的-MVVM-开发框架。" class="headerlink" title="简单点来说 Vue 是一套用于构建用户界面的前端渐进式的 MVVM 开发框架。"></a>简单点来说 Vue 是一套用于构建用户界面的前端渐进式的 MVVM 开发框架。</h3><span id="more"></span>

<h4 id="Vue-的生命周期是什么？"><a href="#Vue-的生命周期是什么？" class="headerlink" title="Vue 的生命周期是什么？"></a>Vue 的生命周期是什么？</h4><p>Vue实例从开始创建、初始化数据、编译模板、挂载dom和渲染、更新和渲染、卸载等一系列过程，这就是Vue的生命周期</p>
<h4 id="Vue-的钩子函数有哪些？"><a href="#Vue-的钩子函数有哪些？" class="headerlink" title="Vue 的钩子函数有哪些？"></a>Vue 的钩子函数有哪些？</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">BeforeCreate()  组件实例被创建之初，组件的属性生效之前</span><br><span class="line">created()  组件实例已经完全创建，属性也绑定，但真实 dom 还没有生成，<span class="variable">$el</span> 还不可用</span><br><span class="line">BeforeMount()  在挂载开始之前被调用：相关的 render 函数首次被调用</span><br><span class="line">mounted()  el 被新创建的 vm.<span class="variable">$el</span> 替换，并挂载到实例上去之后调用该钩子</span><br><span class="line">BeforeUpdate()  组件数据更新之前调用，发生在虚拟 DOM 打补丁之前</span><br><span class="line">updated()  组件数据更新之后</span><br><span class="line">BeforeDestroy()  组件销毁前</span><br><span class="line">destroyed()  组件销毁成功</span><br></pre></td></tr></table></figure>

<h4 id="Vue-在哪个生命周期内调用异步请求？为什么？"><a href="#Vue-在哪个生命周期内调用异步请求？为什么？" class="headerlink" title="Vue 在哪个生命周期内调用异步请求？为什么？"></a>Vue 在哪个生命周期内调用异步请求？为什么？</h4><p>可以在created、beforeMount、mounted中调用，因为这三个钩子函数中，data已经创建，可以将服务器返回的数据进行赋值。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在created中用异步请求的优点</span><br><span class="line">    能更快的获取服务器的数据，减少页面加载时间。</span><br><span class="line">    ssr不支持beforeMount、mounted，所以放在created中有助于一致性。</span><br></pre></td></tr></table></figure>

<h4 id="Vue-组件间通信方式有哪些？"><a href="#Vue-组件间通信方式有哪些？" class="headerlink" title="Vue 组件间通信方式有哪些？"></a>Vue 组件间通信方式有哪些？</h4><pre><code>父传子 使用 props 属性进行
字传父 使用事件派发 ($emit)
非相关组件 使用时间总线(EventBus)
</code></pre>
<h4 id="路由的传参方式有哪些？"><a href="#路由的传参方式有哪些？" class="headerlink" title="路由的传参方式有哪些？"></a>路由的传参方式有哪些？</h4><pre><code>使用进行路由导航，传递参数。
使用 this.$router.push,通过配置路由属性中的 path 来确定匹配的路由，携带参数进行传参。
使用 this.$router.push,通过配置路由属性中的 name 来确定匹配的路由，携带参数进行传参。
使用 path 匹配路由通过 query 传参，query 传参的参数会显示在 url 地址的后面 ?id=……
</code></pre>
]]></content>
      <tags>
        <tag>VUE</tag>
      </tags>
  </entry>
  <entry>
    <title>一些常用的移动端的属性设置</title>
    <url>/2022/02/18/%E5%B1%9E%E6%80%A7%E8%AE%BE%E7%BD%AE/</url>
    <content><![CDATA[<p><img src="/images/head.svg"></p>
<span id="more"></span>

<p>网传是阿里前端工程师总结的关于移动端 HTML5 meta 标签的属性设置，仔细阅读原文会发现代码注释一会在上面一会在下面，所以，我把它整理了如下…</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 使用 HTML5 doctype，不区分大小写 --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 更加标准的 lang 属性写法 http://zhi.hu/XyIa --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-cmn-Hans&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 声明文档使用的字符编码 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&#x27;utf-8&#x27;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 优先使用 IE 最新版本和 Chrome --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge,chrome=1&quot;</span>/&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 页面描述 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;description&quot;</span> <span class="attr">content</span>=<span class="string">&quot;不超过150个字符&quot;</span>/&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 页面关键词 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;keywords&quot;</span> <span class="attr">content</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 网页作者 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;author&quot;</span> <span class="attr">content</span>=<span class="string">&quot;name, email@gmail.com&quot;</span>/&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 搜索引擎抓取 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;robots&quot;</span> <span class="attr">content</span>=<span class="string">&quot;index,follow&quot;</span>/&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 为移动设备添加 viewport --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;initial-scale=1, maximum-scale=3, minimum-scale=1, user-scalable=no&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- `width=device-width` 会导致 iPhone 5 添加到主屏后以 WebApp 全屏模式打开页面时出现黑边 http://bigc.at/ios-webapp-viewport-meta.orz --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- iOS 设备 begin --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 添加到主屏后的标题（iOS 6 新增） --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;apple-mobile-web-app-title&quot;</span> <span class="attr">content</span>=<span class="string">&quot;标题&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 是否启用 WebApp 全屏模式，删除苹果默认的工具栏和菜单栏 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;apple-mobile-web-app-capable&quot;</span> <span class="attr">content</span>=<span class="string">&quot;yes&quot;</span>/&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 添加智能 App 广告条 Smart App Banner（iOS 6+ Safari） --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;apple-itunes-app&quot;</span> <span class="attr">content</span>=<span class="string">&quot;app-id=myAppStoreID, affiliate-data=myAffiliateData, app-argument=myURL&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 设置苹果工具栏颜色 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;apple-mobile-web-app-status-bar-style&quot;</span> <span class="attr">content</span>=<span class="string">&quot;black&quot;</span>/&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 忽略页面中的数字识别为电话，忽略email识别 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;format-detection&quot;</span> <span class="attr">content</span>=<span class="string">&quot;telphone=no, email=no&quot;</span>/&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 启用360浏览器的极速模式(webkit) --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;renderer&quot;</span> <span class="attr">content</span>=<span class="string">&quot;webkit&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 避免IE使用兼容模式 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 不让百度转码 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Cache-Control&quot;</span> <span class="attr">content</span>=<span class="string">&quot;no-siteapp&quot;</span> /&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 针对手持设备优化，主要是针对一些老的不识别viewport的浏览器，比如黑莓 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;HandheldFriendly&quot;</span> <span class="attr">content</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 微软的老式浏览器 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;MobileOptimized&quot;</span> <span class="attr">content</span>=<span class="string">&quot;320&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- uc强制竖屏 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;screen-orientation&quot;</span> <span class="attr">content</span>=<span class="string">&quot;portrait&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- QQ强制竖屏 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;x5-orientation&quot;</span> <span class="attr">content</span>=<span class="string">&quot;portrait&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- UC强制全屏 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;full-screen&quot;</span> <span class="attr">content</span>=<span class="string">&quot;yes&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- QQ强制全屏 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;x5-fullscreen&quot;</span> <span class="attr">content</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- UC应用模式 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;browsermode&quot;</span> <span class="attr">content</span>=<span class="string">&quot;application&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- QQ应用模式 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;x5-page-mode&quot;</span> <span class="attr">content</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- windows phone 点击无高光 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;msapplication-tap-highlight&quot;</span> <span class="attr">content</span>=<span class="string">&quot;no&quot;</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">&lt;!-- iOS 图标 begin --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;apple-touch-icon-precomposed&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/apple-touch-icon-57x57-precomposed.png&quot;</span>/&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- iPhone 和 iTouch，默认 57x57 像素，必须有 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;apple-touch-icon-precomposed&quot;</span> <span class="attr">sizes</span>=<span class="string">&quot;114x114&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/apple-touch-icon-114x114-precomposed.png&quot;</span>/&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- Retina iPhone 和 Retina iTouch，114x114 像素，可以没有，但推荐有 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;apple-touch-icon-precomposed&quot;</span> <span class="attr">sizes</span>=<span class="string">&quot;144x144&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/apple-touch-icon-144x144-precomposed.png&quot;</span>/&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- Retina iPad，144x144 像素，可以没有，但推荐有 --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- iOS 图标 end --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- iOS 启动画面 begin --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- iPad 竖屏 768 x 1004（标准分辨率） --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;apple-touch-startup-image&quot;</span> <span class="attr">sizes</span>=<span class="string">&quot;768x1004&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/splash-screen-768x1004.png&quot;</span>/&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- iPad 竖屏 1536x2008（Retina） --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;apple-touch-startup-image&quot;</span> <span class="attr">sizes</span>=<span class="string">&quot;1536x2008&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/splash-screen-1536x2008.png&quot;</span>/&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- iPad 横屏 1024x748（标准分辨率） --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;apple-touch-startup-image&quot;</span> <span class="attr">sizes</span>=<span class="string">&quot;1024x748&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/Default-Portrait-1024x748.png&quot;</span>/&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- iPad 横屏 2048x1496（Retina） --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;apple-touch-startup-image&quot;</span> <span class="attr">sizes</span>=<span class="string">&quot;2048x1496&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/splash-screen-2048x1496.png&quot;</span>/&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- iPhone/iPod Touch 竖屏 320x480 (标准分辨率) --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;apple-touch-startup-image&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/splash-screen-320x480.png&quot;</span>/&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- iPhone/iPod Touch 竖屏 640x960 (Retina) --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;apple-touch-startup-image&quot;</span> <span class="attr">sizes</span>=<span class="string">&quot;640x960&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/splash-screen-640x960.png&quot;</span>/&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- iPhone 5/iPod Touch 5 竖屏 640x1136 (Retina) --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;apple-touch-startup-image&quot;</span> <span class="attr">sizes</span>=<span class="string">&quot;640x1136&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/splash-screen-640x1136.png&quot;</span>/&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- iOS 启动画面 end --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- iOS 设备 end --&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">&lt;!-- Windows 8 磁贴颜色 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;msapplication-TileColor&quot;</span> <span class="attr">content</span>=<span class="string">&quot;#000&quot;</span>/&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- Windows 8 磁贴图标 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;msapplication-TileImage&quot;</span> <span class="attr">content</span>=<span class="string">&quot;icon.png&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 添加 RSS 订阅 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;alternate&quot;</span> <span class="attr">type</span>=<span class="string">&quot;application/rss+xml&quot;</span> <span class="attr">title</span>=<span class="string">&quot;RSS&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/rss.xml&quot;</span>/&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 添加 favicon icon --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;shortcut icon&quot;</span> <span class="attr">type</span>=<span class="string">&quot;image/ico&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/favicon.ico&quot;</span>/&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">&lt;!-- sns 社交标签 begin --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 参考微博API --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">property</span>=<span class="string">&quot;og:type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;类型&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">property</span>=<span class="string">&quot;og:url&quot;</span> <span class="attr">content</span>=<span class="string">&quot;URL地址&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">property</span>=<span class="string">&quot;og:title&quot;</span> <span class="attr">content</span>=<span class="string">&quot;标题&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">property</span>=<span class="string">&quot;og:image&quot;</span> <span class="attr">content</span>=<span class="string">&quot;图片&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">property</span>=<span class="string">&quot;og:description&quot;</span> <span class="attr">content</span>=<span class="string">&quot;描述&quot;</span> /&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- sns 社交标签 end --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>HTML、meta、前端</tag>
      </tags>
  </entry>
  <entry>
    <title>BFC</title>
    <url>/2021/10/19/BFC/</url>
    <content><![CDATA[<h4 id="什么是-BFC"><a href="#什么是-BFC" class="headerlink" title="什么是 BFC"></a>什么是 BFC</h4><p>BFC(Block formatting context)译为”块格式化上下文”，是一个独立的渲染区域，规定了内部的子元素如何布局，并且与这个区域外部毫不相干。</p>
<span id="more"></span>

<h4 id="哪些元素会生成-BFC"><a href="#哪些元素会生成-BFC" class="headerlink" title="哪些元素会生成 BFC"></a>哪些元素会生成 BFC</h4><ol>
<li>根元素 html</li>
<li>float 属性不为 none</li>
<li>position 为 absolute 或 fixed</li>
<li>display 为 inline-block, table-cell, table-caption, flex, inline-flex</li>
<li>overflow 不为 visible（除非该值已经被传播到视口）</li>
</ol>
<h4 id="BFC-布局规则是怎样的"><a href="#BFC-布局规则是怎样的" class="headerlink" title="BFC 布局规则是怎样的"></a>BFC 布局规则是怎样的</h4><ol>
<li>内部的 Box 会在垂直方向，一个接一个地放置。</li>
<li>Box 垂直方向的距离由 margin 决定。属于同一个 BFC 的两个相邻 Box 的 margin 会发生重叠</li>
<li>每个元素的 margin box 的左边， 与包含块 border box 的左边相接触(对于从左往右的格式化，否则相反)。即使存在浮动也是如此。</li>
<li>BFC 的区域不会与 float box 重叠。</li>
<li>BFC 就是页面上的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素。反之也如此。</li>
<li>计算 BFC 的高度时，浮动元素也参与计算</li>
<li>并不是只有块元素才会生成 BFC，任何元素只要符合条件即可生成 BFC</li>
</ol>
<h4 id="BFC-的应用"><a href="#BFC-的应用" class="headerlink" title="BFC 的应用"></a>BFC 的应用</h4><ol>
<li>自适应两栏布局</li>
<li>清除内部浮动</li>
<li>防止 margin 上下重叠</li>
</ol>
]]></content>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>IMG 下多余空隙解决方案</title>
    <url>/2021/07/18/%E4%B8%8B%E5%A4%9A%E4%BD%99%E7%A9%BA%E9%9A%99%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
    <content><![CDATA[<p>在进行页面的 CSS 排版时，遇到 IE6（当然有时 Firefox 下也会偶遇）浏览器中的图片元素 img 下出现多余空隙的问题绝对是常见的。对于该问题的解决方法也是「见机行事」，根据原因的不同要用不同的解决方法，这里把解决 img 下边多余空隙 Bug 的常用方法归纳，供大家参考。</p>
<span id="more"></span>

<p>假如 Html 结构如下所示，img 的父级元素为 figure:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;figure&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;...&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;...&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="1、将图片转换为块级对像"><a href="#1、将图片转换为块级对像" class="headerlink" title="1、将图片转换为块级对像"></a>1、将图片转换为块级对像</h3><p>即设置 img 的 display 为：block，示例 CSS 代码：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.figure</span> <span class="selector-tag">img</span> &#123; <span class="attribute">display</span>: block;&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2、设置图片的垂直对齐方式"><a href="#2、设置图片的垂直对齐方式" class="headerlink" title="2、设置图片的垂直对齐方式"></a>2、设置图片的垂直对齐方式</h3><p>即设置图片的 vertical-align 属性为：top、text-top、bottom、text-bottom，示例 CSS 代码：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.figure</span> <span class="selector-tag">img</span> &#123; <span class="attribute">vertical-align</span>: top;&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3、设置父级对象的文字大小为-0"><a href="#3、设置父级对象的文字大小为-0" class="headerlink" title="3、设置父级对象的文字大小为 0"></a>3、设置父级对象的文字大小为 0</h3><p>即设置 figure 的 font-size 属性为: 0， 可以解决问题，<strong>但这也引发了新的问题，在父对像中的文字都无法显示。</strong>就算文字部分被子对像括起来，重置子对像文字大小依然可以显示，但在 CSS 效验的时候会提示文字过小的错误。示例 CSS 代码：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.figure</span> &#123; <span class="attribute">font-size</span>: <span class="number">0</span>;&#125;</span><br></pre></td></tr></table></figure>

<h3 id="4、改变父级对象的属性"><a href="#4、改变父级对象的属性" class="headerlink" title="4、改变父级对象的属性"></a>4、改变父级对象的属性</h3><p>如果父级对象的宽、高固定，img 自适应父级对像大小，那么可以设置：<br>overflow:hidden; 来解决。如本例中可以向#sub中添加以下代码：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.figure</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="5、设置-img-的浮动属性"><a href="#5、设置-img-的浮动属性" class="headerlink" title="5、设置 img 的浮动属性"></a>5、设置 img 的浮动属性</h3><p>给 img 设置 float 属性为：left、right，示例 CSS 代码：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">img</span> &#123; <span class="attribute">float</span>: left;&#125;</span><br></pre></td></tr></table></figure>

<p>如果要实现图文混排，这种方法是很好的选择。</p>
<h3 id="6、取消-img-标签和其父级对象的最后一个结束标签之间的空格"><a href="#6、取消-img-标签和其父级对象的最后一个结束标签之间的空格" class="headerlink" title="6、取消 img 标签和其父级对象的最后一个结束标签之间的空格"></a>6、取消 img 标签和其父级对象的最后一个结束标签之间的空格</h3><p>这个方法要强调下，在实际开发中该方法可能会出乱子，因为在写代码的时候为了让代码更体现语义和层次清晰，难免要通过 IDE 提供代码缩进显示，这必然 会让标签和其他标签换行显示，比如说 Dreamweaver 的“套用源格式”命令。所以说这个方法可以供我们了解出现 Bug 的一种情况，具体解决方案的还得各位见招拆招了。</p>
]]></content>
      <tags>
        <tag>CSS、前端</tag>
      </tags>
  </entry>
  <entry>
    <title>弹性盒模型和几种布局方式</title>
    <url>/2021/01/22/%E5%BC%B9%E6%80%A7%E7%9B%92%E6%A8%A1%E5%9E%8B%E5%92%8C%E5%87%A0%E7%A7%8D%E5%B8%83%E5%B1%80%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<h4 id="怪异盒模型"><a href="#怪异盒模型" class="headerlink" title="怪异盒模型"></a>怪异盒模型</h4><p>浏览器对盒模型的解析一共有两种模式，一种是标准模式，另一种就是怪异模式。<br>一般在页面头部声明了 DOCTYPE，都会触发标准模式，而如果 DOCTYPE 缺失则在 ie6，ie7，ie8 下将会触发怪异模式（quirks 模式）。<br>标准盒模型和怪异盒模型的区别：<br>在标准模式下，一个块的总宽度&#x3D; width + margin(左右) + padding(左右) + border(左右)<br>在怪异模式下，一个块的总宽度&#x3D; width + margin(左右)（即 width 已经包含了 padding 和 border 值）</p>
<span id="more"></span>

<p>Css3 中 box-sizing：属性让两种盒模型相互转变<br>box-sizing ： content-box || border-box || inherit;<br>当设置为 box-sizing:content-box 时，将采用标准模式解析计算，也是默认模式；<br>当设置为 box-sizing:border-box 时，将采用怪异模式解析计算；</p>
<h4 id="新版盒模型"><a href="#新版盒模型" class="headerlink" title="新版盒模型"></a>新版盒模型</h4><p>Flex 布局是什么？<br>传统 的布局方案，是基于盒模型，依赖 display+position+float，但是对于特殊的布局就非常的不方便，如：垂直居中，2009 年为 w3c 提出一种新方案—–flex 布局，目前兼容的浏览器有：<br>Chrome 21+<br>Opera 12.1+<br>FireFox 22+<br>Safari 6.1+<br>IE 10+</p>
<p>在未来 flex 布局将成为布局的首选方案<br>Flex 是 flexinle Box 的缩写，意思是弹性布局；用来为盒模型提供最大的灵活性，任何一个容器都可以指定为 flex 布局。即：display：flex；</p>
<p>注：设置了 flex 布局后当前容器内子元素的 float、clear、vertical-align 属性将全部消失</p>
<h4 id="Flex-基本概念"><a href="#Flex-基本概念" class="headerlink" title="Flex 基本概念"></a>Flex 基本概念</h4><p>采用 flex 布局的元素，称为 flex 容器，它的所有子元素自动成为容器成员，称为容器项目</p>
<p>容器默认存在两根轴：水平的主轴（main axis）和垂直交叉轴（cross axis）.主轴的开始位置（与边框的交叉点）叫做 main start, 结束位置叫做 main end ;交叉轴的开始位置叫做 cross start ,结束位置叫做 cross end.项目默认沿主轴排列。单个项目占据的主轴空间叫做 main size,占据的交叉轴叫做 cross size.</p>
<h4 id="容器的属性"><a href="#容器的属性" class="headerlink" title="容器的属性"></a>容器的属性</h4><ol>
<li><p>display：flex<br>设置为弹性盒(父元素添加)</p>
</li>
<li><p>flex-direction (主轴的方向)<br>说明：指定了弹性子元素在父容器中的位置<br>row 默认在一行内排列<br>row-reverse：反转横向排列（右对齐，从后往前排，最后一项排在最前面。）<br>column：纵向排列。<br>column-reverse：反转纵向排列，从下往上排，最后一项排在最上面</p>
</li>
<li><p>justify-content(主轴对齐方式)<br>内容对齐（justify-content）属性应用在弹性容器上，把弹性项沿着弹性容器的主轴线（main axis）对齐<br>flex-start 默认，左对齐<br>flex-end 右对齐<br>center 居中对齐<br>space-between 两端对齐，中间自动分配<br>space-around 自动分配距离</p>
</li>
<li><p>align-items（侧轴对齐方式）<br>flex-start：顶端对齐<br>flex-end：底对齐<br>center：垂直居中对齐<br>baseline：项目内文本的底线对齐<br>stretch 默认值 项目的高度自适应容器（注：子元素不能设置高度</p>
</li>
<li><p>flex-wrap<br>该属性控制 flex 容器是单行或者多行，同时横轴的方向决定了新行堆叠的方向。<br>nowrap：flex 容器为单行。该情况下 flex 子项可能会溢出容器<br>wrap：flex 容器为多行。该情况下 flex 子项溢出的部分会被放置到新行，子项内部会发生断行<br>wrap-reverse：反转 wrap 排列。</p>
</li>
<li><p>align-content（行与行之间对齐方式）<br>当伸缩容器的侧轴还有多余空间时，本属性可以用来调整「伸缩行」在伸缩容器里的对齐方式，这与调整伸缩项目在主轴上对齐方式的 &lt;’justify-content’&gt; 属性类似。注：本属性在只有一行的伸缩容器上没有效果。<br>flex-start没有行间距<br>flex-end底对齐没有行间距<br>center居中没有行间距<br>space-between两端对齐，中间自动分配<br>space-around自动分配距离</p>
</li>
<li><p>align-self<br>align-self 属性规定灵活容器内被选中项目的对齐方式。<br>注意：align-self 属性可重写灵活容器的 align-items 属性。<br>auto 默认值。元素继承了它的父容器的 align-items 属性。如果没有父容器则为 “stretch”。<br>stretch元素被拉伸以适应容器。<br>center元素位于容器的中心。<br>flex-start元素位于容器的开头。<br>flex-end 元素位于容器的结尾。<br>Internet Explorer 和 Safari 浏览器不支持 align-self 属性。</p>
</li>
<li><p>order<br>number 排序优先级，数字越大越往后排，默认为 0，支持负数</p>
</li>
<li><p>flex-grow<br>flex-grow 属性定义项目的放大比例，默认为 0，即如果存在剩余空间，也不放大。</p>
</li>
</ol>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">    <span class="attribute">flex-grow</span>: &lt;number&gt;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>如果所有项目的 flex-grow 属性都为 1，则它们将等分剩余空间（如果有的话）。如果一个项目的 flex-grow 属性为 2，其他项目都为 1，则前者占据的剩余空间将比其他项多一倍。</p>
<ol start="10">
<li><p>flex-shrink<br>flex-shrink 属性定义了项目的缩小比例，默认为 1，即如果空间不足，该项目将缩小。<br>如果所有项目的 flex-shrink 属性都为 1，当空间不足时，都将等比例缩小。如果一个项目的 flex-shrink 属性为 0，其他项目都为 1，则空间不足时，前者不缩小。<br>负值对该属性无效。</p>
</li>
<li><p>flex-basis<br>flex-basis 属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为 auto，即项目的本来大小。<br>它可以设为跟 width 或 height 属性一样的值（比如 350px），则项目将占据固定空间</p>
</li>
<li><p>flex<br>复合属性。设置或检索弹性盒模型对象的子元素如何分配空间<br>flex 属性是 flex-grow, flex-shrink 和 flex-basis 的简写，默认值为 0 1 auto。后两个属性可选。<br>该属性有两个快捷值：auto (1 1 auto) 和 none (0 0 auto)。<br>建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。</p>
</li>
</ol>
<h4 id="CSS3-多列分栏布局"><a href="#CSS3-多列分栏布局" class="headerlink" title="CSS3 多列分栏布局"></a>CSS3 多列分栏布局</h4><ol>
<li>column-count：auto | 整数；—控制栏数</li>
<li>column-width：value；—每栏的宽度</li>
<li>column-gap : value ;—两栏之间的间距</li>
<li>column-rule : 宽度，线型，颜色；—栏与栏的间隔线<br>类似 border，solid | dotted | dashed 实线 | 点线 | 虚线</li>
</ol>
<p>column-width 和 column-count 这两个属性提供了分栏的标准，只写其中的一个<br>column-gap 和 column-rule 就处在相邻两列之间</p>
<p>让某个元素跨栏加到某个元素上：column-span : all &#x2F; none ; 是否跨栏显示</p>
]]></content>
      <tags>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>第一篇测试博客</title>
    <url>/2020/07/18/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%B5%8B%E8%AF%95%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<blockquote>
<p>今天天气真不错</p>
<p>我试试</p>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>关于闭包</title>
    <url>/2020/05/15/%E5%85%B3%E4%BA%8E%E9%97%AD%E5%8C%85/</url>
    <content><![CDATA[<h4 id="什么是闭包"><a href="#什么是闭包" class="headerlink" title="什么是闭包"></a>什么是闭包</h4><p>闭包就是能够读取其他函数内部变量的函数。在 JS 中，只有函数内部的子函数才能读取局部变量，因此可以把闭包简单理解为”定义在一个函数内部的函数”。</p>
<span id="more"></span>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> b = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">//闭包</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">box</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(b);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//返回一个函数，这个函数就是一个闭包</span></span><br><span class="line">    <span class="keyword">return</span> box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//res 就是 box 函数</span></span><br><span class="line"><span class="keyword">let</span> res = <span class="title function_">fn</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//2秒以后调用res函数，还是能打印b的值,闭包能让局部变量常驻内存</span></span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">res</span>();</span><br><span class="line">&#125;, <span class="number">2000</span>);</span><br></pre></td></tr></table></figure>

<h4 id="闭包的特点"><a href="#闭包的特点" class="headerlink" title="闭包的特点"></a>闭包的特点</h4><ol>
<li>可以读取函数内部的变量。<br> 变量的作用域无非就是两种：全局变量和局部变量。<br> JS 语言的特殊之处，就在于函数内部可以直接读取全局变量。另一方面，函数外部自然无法读取函数内的局部变量。</li>
<li>让这些变量的值始终保存在内存中。</li>
</ol>
<h4 id="闭包的应用场景"><a href="#闭包的应用场景" class="headerlink" title="闭包的应用场景"></a>闭包的应用场景</h4><ol>
<li>函数作为返回值。</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">box</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> n = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">cox</span>(<span class="params"></span>) &#123;</span><br><span class="line">        n++;</span><br><span class="line">        <span class="keyword">return</span> n;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> cox;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//res 就是一个闭包 ，n像是一个全局变量</span></span><br><span class="line"><span class="keyword">let</span> res = <span class="title function_">box</span>();</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">res</span>()); <span class="comment">//2</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">res</span>()); <span class="comment">//3</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>函数作为参数被传递<br> 回调函数</li>
</ol>
<h4 id="闭包深度解析参考"><a href="#闭包深度解析参考" class="headerlink" title="闭包深度解析参考"></a>闭包深度解析参考</h4><p>阮一峰博客：<a href="https://www.ruanyifeng.com/blog/2009/08/learning_javascript_closures.html">学习 Javascript 闭包（Closure）</a></p>
]]></content>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
</search>
